name: build
on:
  [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        java: [21]  # Current Java LTS

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./build-artifacts

      - name: Push build artifacts to main branch
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.event.pull_request == null
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const artifactsDir = './build-artifacts';
            const files = fs.readdirSync(artifactsDir);
            files.forEach(file => {
              const filePath = path.join(artifactsDir, file);
              const fileContent = fs.readFileSync(filePath, { encoding: 'utf8' });
              github.repos.createCommit({
                owner: github.repository_owner,
                repo: github.repository,
                message: `Automated build: ${file}`,
                files: [
                  {
                    path: `/${file}`,
                    content: fileContent
                  }
                ]
              });
            });
